name: Running Unit Test, Build Docker Image, Push To Docker Hub and Deploy To EC2

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  unit-test:
    name: "unit testing"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: running unit testing
        run: go test ./... -cover

  build-push-docker:
    name: "Build images and push to registry"
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v2
      - name: build docker
        run: docker build -t ryudential/playlist_saver_km:1.0.0 .
      - name: login registry docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME}}
          password: ${{ secrets.DOCKER_HUB_PASSWORD}}
      - name: push image to registry docker hub
        run: docker push ryudential/playlist_saver_km:1.0.0

  deployment-ec2-aws:
    name: "deploy to ec2 from registry docker hub"
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: configuration SSH
        env:
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRED: ${{ secrets.JWT_EXPIRED }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          YT_SECRET: ${{ secrets.YT_SECRET }}
        run:
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/playlist_saver.pem
          chmod 400 ~/.ssh/playlist_saver.pem
          cat >>~/.ssh/config <<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/playlist_saver.pem
            StrictHostKeyChecking=no
          END
      - name: Connect EC2 & Remove all container & pull from registry & and start docker
        run: |
          ssh development 'docker rm -f $(docker ps -a -q) && \
          docker pull ryudential/playlist_saver_km:1.0.0 && \
          docker run -d -p 8080:8080 --name playlist_saver \
          --env JWT_SECRET=$JWT_SECRET --env=$JWT_EXPIRED --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD \
          --env DB_HOST=$DB_HOST --env DB_PORT=$DB_PORT --env DB_NAME=$DB_NAME --env YT_SECRET=$YT_SECRET \
          ryudential/playlist_saver_km:1.0.0'







